/*!
 * Fizzion Font-Face v0.0.1
 * Copyright 2018 Alex Lemanski
 * Licensed under MIT
 *   (https://github.com/fizzion/fizzion-font-face/blob/master/LICENSE.md)
 */

@mixin woff-font-face($url, $family: null, $weight: null, $style: null) {
  $quoted-url: quote($url);
  @if $family != null {
    font-family: $family;
  }
  @if $weight != null {
    font-weight: $weight;
  }
  @if $style != null {
    font-style: $style;
  }
  src: url($quoted-url) format(quote(woff));
}

@mixin map-font-face($font-map) {
  $url-format-list: () !default;

  @if map-has-key($font-map, 'eot') {
    $url: quote(map-get($font-map, 'eot'));
    src: url($url);
    $url-format-list: append(
      $url-format-list,
      url($url + '?#iefix') format(quote(embedded-opentype)),
      'comma'
    );
  }

  @if map-has-key($font-map, 'woff2') {
    $url: quote(map-get($font-map, 'woff2'));
    $url-format-list: append(
      $url-format-list,
      url($url) format(quote(woff2)),
      'comma'
    );
  }

  @if map-has-key($font-map, 'woff') {
    $url: quote(map-get($font-map, 'woff'));
    $url-format-list: append(
      $url-format-list,
      url($url) format(quote(woff)),
      'comma'
    );
  }

  @if map-has-key($font-map, 'truetype') {
    $url: quote(map-get($font-map, 'truetype'));
    $url-format-list: append(
      $url-format-list,
      url($url) format(quote(truetype)),
      'comma'
    );
  }

  @if map-has-key($font-map, 'svg') {
    $url: quote(map-get($font-map, 'svg'));
    $url-format-list: append(
      $url-format-list,
      url($url) format(quote(svg)),
      'comma'
    );
  }

  src: $url-format-list;
}
